public String getPlatform(String platform) {
  switch (platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'linux'
    case ~/.*darwin.*/: return 'darwin'
    case ~/.*osx.*/:    return 'darwin'
    case ~/.*win.*/:    return 'windows'
    default:            return null
  }
}

public String getSWTWindowingLibrary(String platform) {
  switch (platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'gtk'
    case ~/.*darwin.*/: return 'cocoa'
    case ~/.*osx.*/:    return 'cocoa'
    case ~/.*win.*/:    return 'win32'
    default:            return null
  }
}

public String getSWTArch(String arch) {
  switch(arch) {
    case ~/.*64.*/: return 'x86_64'
    default:        return 'x86'
  }
}

public String getSWTPlatform(String platform) {
  switch(platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'linux'
    case ~/.*darwin.*/: return 'macosx'
    case ~/.*osx.*/:    return 'macosx'
    case ~/.*win.*/:    return 'win32'
    default:            return platform
  }
}

ext {
  swtWindowingLibrary = getSWTWindowingLibrary(System.properties['os.name'])
  swtArch = getSWTArch(System.properties['os.arch'])
  swtPlatform = getSWTPlatform(System.properties['os.name'])
  swtVersion = '4.3'
  swtArtifactName = "org.eclipse.swt.${swtWindowingLibrary}.${swtPlatform}.${swtArch}"

  platform = getPlatform(System.properties['os.name'])
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'

repositories{
  mavenCentral()
  maven {
    url "https://swt-repo.googlecode.com/svn/repo/"
  }
}

dependencies{
  compile 'com.ibm.icu:icu4j:54.1'
  compile fileTree(dir:'libs', include: '*.jar')
  testCompile 'org.testng:testng:6.8.1'
  compile "org.eclipse.swt:${swtArtifactName}:${swtVersion}"
}


test.useTestNG()

mainClassName = "gui.Main"
run {
  // Used for opening SWT window
  jvmArgs << "-XstartOnFirstThread"
}
